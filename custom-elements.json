{
  "version": "experimental",
  "tags": [
    {
      "name": "nef-alert",
      "path": "./src/components/Alert/index.ts",
      "attributes": [
        {
          "name": "variant",
          "description": "The stylistic variant of the alert.\n**info** - The default variant.\n**success** - A success variant.\n**warning** - A warning variant.\n**error** - An error variant.",
          "type": "string",
          "default": "\"info\""
        },
        {
          "name": "closeButtonText",
          "description": "Close button text for language/customization support",
          "type": "string",
          "default": "\"Close\""
        },
        {
          "name": "system",
          "description": "Whether the alert is a system alert or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dismissible",
          "description": "Whether the alert is dismissible or not.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The stylistic variant of the alert.\n**info** - The default variant.\n**success** - A success variant.\n**warning** - A warning variant.\n**error** - An error variant.",
          "type": "string",
          "default": "\"info\""
        },
        {
          "name": "closeButtonText",
          "attribute": "closeButtonText",
          "description": "Close button text for language/customization support",
          "type": "string",
          "default": "\"Close\""
        },
        {
          "name": "system",
          "attribute": "system",
          "description": "Whether the alert is a system alert or not.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "dismissible",
          "attribute": "dismissible",
          "description": "Whether the alert is dismissible or not.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "nef-alert-close"
        }
      ]
    },
    {
      "name": "nef-avatar",
      "path": "./src/components/Avatar/index.ts",
      "attributes": [
        {
          "name": "variant",
          "description": "The variant of the avatar.\n - **image**: Displays an image.\n - **text**: Displays text.",
          "type": "AvatarVariant",
          "default": "\"text\""
        },
        {
          "name": "size",
          "description": "The size of the avatar.\n- **sm**: Small size.\n- **md**: Medium size.\n- **lg**: Large size.",
          "type": "Omit<Sizes, \"xs\">",
          "default": "\"md\""
        },
        {
          "name": "imgSrc",
          "description": "The source URL for the image, used when variant is 'image'.",
          "type": "string"
        },
        {
          "name": "imgAlt",
          "description": "The alt text for the image, used when variant is 'image'.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The variant of the avatar.\n - **image**: Displays an image.\n - **text**: Displays text.",
          "type": "AvatarVariant",
          "default": "\"text\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "The size of the avatar.\n- **sm**: Small size.\n- **md**: Medium size.\n- **lg**: Large size.",
          "type": "Omit<Sizes, \"xs\">",
          "default": "\"md\""
        },
        {
          "name": "imgSrc",
          "attribute": "imgSrc",
          "description": "The source URL for the image, used when variant is 'image'.",
          "type": "string"
        },
        {
          "name": "imgAlt",
          "attribute": "imgAlt",
          "description": "The alt text for the image, used when variant is 'image'.",
          "type": "string"
        }
      ]
    },
    {
      "name": "nef-badge",
      "path": "./src/components/Badge/index.ts",
      "attributes": [
        {
          "name": "ariaLabel",
          "description": "Aria label\n1) Use for icon-only or xs badges when there should be text for accessibility",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Disabed state",
          "type": "boolean | undefined"
        },
        {
          "name": "isCircle",
          "description": "Icon only badges",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "description": "Size variant\n- **md** is the default size\n- **xs** renders a badge that is smaller both `sm` and `md`. Do not use icon or text within.\n- **sm** renders a badge that is smaller than the default `md`\n- **lg** renders a badge that is larger than the default `md`",
          "type": "Omit<Sizes, \"xl\">",
          "default": "\"md\""
        },
        {
          "name": "variant",
          "description": "Style variant\n- **primary** renders a badge with primary state color treatment\n- **secondary** renders a badge with secondary color treatment\n- **dark** renders a badge with dark color treatment\n- **error** renders a badge with error state treatment\n- **warning** renders a badge with warning state treatment\n- **success** renders a badge with success state treatment",
          "type": "BadgeVariant | undefined",
          "default": "\"primary\""
        }
      ],
      "properties": [
        {
          "name": "ariaLabel",
          "attribute": "ariaLabel",
          "description": "Aria label\n1) Use for icon-only or xs badges when there should be text for accessibility",
          "type": "string"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disabed state",
          "type": "boolean | undefined"
        },
        {
          "name": "isCircle",
          "attribute": "isCircle",
          "description": "Icon only badges",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Size variant\n- **md** is the default size\n- **xs** renders a badge that is smaller both `sm` and `md`. Do not use icon or text within.\n- **sm** renders a badge that is smaller than the default `md`\n- **lg** renders a badge that is larger than the default `md`",
          "type": "Omit<Sizes, \"xl\">",
          "default": "\"md\""
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Style variant\n- **primary** renders a badge with primary state color treatment\n- **secondary** renders a badge with secondary color treatment\n- **dark** renders a badge with dark color treatment\n- **error** renders a badge with error state treatment\n- **warning** renders a badge with warning state treatment\n- **success** renders a badge with success state treatment",
          "type": "BadgeVariant | undefined",
          "default": "\"primary\""
        }
      ]
    },
    {
      "name": "nef-box",
      "path": "./src/components/Box/index.ts",
      "attributes": [
        {
          "name": "padding",
          "type": "string | undefined"
        },
        {
          "name": "paddingHorizontal",
          "type": "string | undefined"
        },
        {
          "name": "paddingLeft",
          "type": "string | undefined"
        },
        {
          "name": "paddingRight",
          "type": "string | undefined"
        },
        {
          "name": "paddingVertical",
          "type": "string | undefined"
        },
        {
          "name": "paddingBottom",
          "type": "string | undefined"
        },
        {
          "name": "paddingTop",
          "type": "string | undefined"
        },
        {
          "name": "margin",
          "type": "string | undefined"
        },
        {
          "name": "marginHorizontal",
          "type": "string | undefined"
        },
        {
          "name": "marginLeft",
          "type": "string | undefined"
        },
        {
          "name": "marginRight",
          "type": "string | undefined"
        },
        {
          "name": "marginVertical",
          "type": "string | undefined"
        },
        {
          "name": "marginBottom",
          "type": "string | undefined"
        },
        {
          "name": "marginTop",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "padding",
          "attribute": "padding",
          "type": "string | undefined"
        },
        {
          "name": "paddingHorizontal",
          "attribute": "paddingHorizontal",
          "type": "string | undefined"
        },
        {
          "name": "paddingLeft",
          "attribute": "paddingLeft",
          "type": "string | undefined"
        },
        {
          "name": "paddingRight",
          "attribute": "paddingRight",
          "type": "string | undefined"
        },
        {
          "name": "paddingVertical",
          "attribute": "paddingVertical",
          "type": "string | undefined"
        },
        {
          "name": "paddingBottom",
          "attribute": "paddingBottom",
          "type": "string | undefined"
        },
        {
          "name": "paddingTop",
          "attribute": "paddingTop",
          "type": "string | undefined"
        },
        {
          "name": "margin",
          "attribute": "margin",
          "type": "string | undefined"
        },
        {
          "name": "marginHorizontal",
          "attribute": "marginHorizontal",
          "type": "string | undefined"
        },
        {
          "name": "marginLeft",
          "attribute": "marginLeft",
          "type": "string | undefined"
        },
        {
          "name": "marginRight",
          "attribute": "marginRight",
          "type": "string | undefined"
        },
        {
          "name": "marginVertical",
          "attribute": "marginVertical",
          "type": "string | undefined"
        },
        {
          "name": "marginBottom",
          "attribute": "marginBottom",
          "type": "string | undefined"
        },
        {
          "name": "marginTop",
          "attribute": "marginTop",
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "nef-breadcrumb",
      "path": "./src/components/Breadcrumb/index.ts",
      "attributes": [
        {
          "name": "ariaLabel",
          "description": "Provides assistive technologies with a description of the type of navigation",
          "type": "string",
          "default": "\"Breadcrumb\""
        }
      ],
      "properties": [
        {
          "name": "ariaLabel",
          "attribute": "ariaLabel",
          "description": "Provides assistive technologies with a description of the type of navigation",
          "type": "string",
          "default": "\"Breadcrumb\""
        },
        {
          "name": "showHideBreadcrumbs"
        }
      ]
    },
    {
      "name": "nef-breadcrumb-item",
      "path": "./src/components/BreadcrumbItem/index.ts",
      "attributes": [
        {
          "name": "href",
          "description": "Specifies the link's destination",
          "type": "string | undefined"
        },
        {
          "name": "hideItem",
          "description": "Hide the breadcrumb item when longer than 5 items",
          "type": "boolean | undefined"
        },
        {
          "name": "isActive",
          "description": "The active breadcrumb item that represents the current page's navigation level",
          "type": "boolean | undefined"
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "description": "Specifies the link's destination",
          "type": "string | undefined"
        },
        {
          "name": "hideItem",
          "attribute": "hideItem",
          "description": "Hide the breadcrumb item when longer than 5 items",
          "type": "boolean | undefined"
        },
        {
          "name": "isActive",
          "attribute": "isActive",
          "description": "The active breadcrumb item that represents the current page's navigation level",
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "nef-button",
      "path": "./src/components/Button/index.ts",
      "attributes": [
        {
          "name": "size",
          "description": "The size of the button.\n**xs** - Extra small size.\n**sm** - Small size.\n**md** - Medium size.\n**lg** - Large size.",
          "type": "Omit<Sizes, \"xl\">",
          "default": "\"md\""
        },
        {
          "name": "variant",
          "description": "The stylistic variant of the button.\n**primary** - The default variant.\n**secondary** - A secondary variant.\n**tertiary** - A tertiary variant.\n**success** - A success variant.\n**error** - An error variant.\n**transparent** - A transparent variant.",
          "type": "string",
          "default": "\"primary\""
        },
        {
          "name": "isCircle",
          "description": "Whether the button should only display an icon.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Whether the button is disabled.",
          "type": "boolean | undefined"
        },
        {
          "name": "href",
          "description": "The URL to navigate to when the button is clicked.",
          "type": "string | undefined"
        },
        {
          "name": "target",
          "description": "The target of the link.\n**_self** - Opens the link in the same tab.\n**_blank** - Opens the link in a new tab.\n**_parent** - Opens the link in the parent frame.\n**_top** - Opens the link in the full body of the window.",
          "type": "Targets | undefined",
          "default": "\"_self\""
        },
        {
          "name": "fullWidth",
          "description": "Whether the button should take the full width of its container.",
          "type": "boolean | undefined"
        }
      ],
      "properties": [
        {
          "name": "size",
          "attribute": "size",
          "description": "The size of the button.\n**xs** - Extra small size.\n**sm** - Small size.\n**md** - Medium size.\n**lg** - Large size.",
          "type": "Omit<Sizes, \"xl\">",
          "default": "\"md\""
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The stylistic variant of the button.\n**primary** - The default variant.\n**secondary** - A secondary variant.\n**tertiary** - A tertiary variant.\n**success** - A success variant.\n**error** - An error variant.\n**transparent** - A transparent variant.",
          "type": "string",
          "default": "\"primary\""
        },
        {
          "name": "isCircle",
          "attribute": "isCircle",
          "description": "Whether the button should only display an icon.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether the button is disabled.",
          "type": "boolean | undefined"
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "The URL to navigate to when the button is clicked.",
          "type": "string | undefined"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "The target of the link.\n**_self** - Opens the link in the same tab.\n**_blank** - Opens the link in a new tab.\n**_parent** - Opens the link in the parent frame.\n**_top** - Opens the link in the full body of the window.",
          "type": "Targets | undefined",
          "default": "\"_self\""
        },
        {
          "name": "fullWidth",
          "attribute": "fullWidth",
          "description": "Whether the button should take the full width of its container.",
          "type": "boolean | undefined"
        }
      ],
      "slots": [
        {
          "name": "before",
          "description": "slot before the button text for icons, etc."
        },
        {
          "name": "after",
          "description": "slot after the button text for icons, etc."
        }
      ]
    },
    {
      "name": "nef-css-grid",
      "path": "./src/components/CSSGrid/index.ts",
      "attributes": [
        {
          "name": "alignItems",
          "type": "AlignItemsType | undefined"
        },
        {
          "name": "area",
          "type": "string | undefined"
        },
        {
          "name": "cols",
          "type": "string | number | undefined",
          "default": "1"
        },
        {
          "name": "gap",
          "type": "string | number | undefined"
        },
        {
          "name": "justifyContent",
          "type": "JustifyContentType | undefined"
        },
        {
          "name": "rows",
          "type": "string | number | undefined",
          "default": "1"
        },
        {
          "name": "textAlign",
          "type": "TextAlignments | undefined"
        }
      ],
      "properties": [
        {
          "name": "alignItems",
          "attribute": "alignItems",
          "type": "AlignItemsType | undefined"
        },
        {
          "name": "area",
          "attribute": "area",
          "type": "string | undefined"
        },
        {
          "name": "cols",
          "attribute": "cols",
          "type": "string | number | undefined",
          "default": "1"
        },
        {
          "name": "gap",
          "attribute": "gap",
          "type": "string | number | undefined"
        },
        {
          "name": "justifyContent",
          "attribute": "justifyContent",
          "type": "JustifyContentType | undefined"
        },
        {
          "name": "rows",
          "attribute": "rows",
          "type": "string | number | undefined",
          "default": "1"
        },
        {
          "name": "textAlign",
          "attribute": "textAlign",
          "type": "TextAlignments | undefined"
        }
      ]
    },
    {
      "name": "nef-checkbox",
      "path": "./src/components/Checkbox/index.ts",
      "attributes": [
        {
          "name": "checked",
          "description": "Checked attribute\n- Changes the component's treatment to represent a checked state",
          "type": "boolean | undefined"
        },
        {
          "name": "indeterminate",
          "description": "Indeterminate state\n- Changes the component's treatment to represent an indeterminate state",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled attribute\n- Changes the component's treatment to represent a disabled state",
          "type": "boolean | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined",
          "default": "true"
        },
        {
          "name": "hideLabel",
          "description": "Hide label?\n- If true, hides the label from displaying",
          "type": "boolean | undefined"
        },
        {
          "name": "label",
          "description": "Label text\n- The text to display as the label",
          "type": "string",
          "default": "\"Checkbox Label\""
        },
        {
          "name": "name",
          "description": "Name attribute",
          "type": "string",
          "default": "\"checkbox-name\""
        },
        {
          "name": "value",
          "description": "Value attribute",
          "type": "string",
          "default": "\"checkbox-value\""
        },
        {
          "name": "fieldId",
          "description": "Id attribute\n- The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the checkbox\n- **sm** renders the default size of the checkbox\n- **md** renders the small size of the checkbox",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "properties": [
        {
          "name": "checked",
          "attribute": "checked",
          "description": "Checked attribute\n- Changes the component's treatment to represent a checked state",
          "type": "boolean | undefined"
        },
        {
          "name": "indeterminate",
          "attribute": "indeterminate",
          "description": "Indeterminate state\n- Changes the component's treatment to represent an indeterminate state",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disabled attribute\n- Changes the component's treatment to represent a disabled state",
          "type": "boolean | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined",
          "default": "true"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Hide label?\n- If true, hides the label from displaying",
          "type": "boolean | undefined"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Label text\n- The text to display as the label",
          "type": "string",
          "default": "\"Checkbox Label\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name attribute",
          "type": "string",
          "default": "\"checkbox-name\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value attribute",
          "type": "string",
          "default": "\"checkbox-value\""
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "Id attribute\n- The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the checkbox\n- **sm** renders the default size of the checkbox\n- **md** renders the small size of the checkbox",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "events": [
        {
          "name": "nef-checkbox-change"
        },
        {
          "name": "nef-checkbox-focus"
        },
        {
          "name": "nef-checkbox-blur"
        }
      ]
    },
    {
      "name": "nef-checkbox-group",
      "path": "./src/components/CheckboxGroup/index.ts",
      "description": "Component: nef-checkbox-group\n- **slot** `label`: Slot for a label\n- **slot** `error-text`: Slot for error text that displays when the checkbox group is invalid\n- **slot** `help-text`: Slot for help text that displays before the checkbox group",
      "attributes": [
        {
          "name": "state",
          "description": "Specifies the state of the checkbox group\n- **valid** applies styles to indicate the checkbox group is valid\n- **invalid** applies styles to indicate the checkbox group is invalid\n- **indeterminate** applies styles to indicate the checkbox group is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "inline",
          "description": "Inline?\n- **true** aligns the checkbox items in a row\n- **false** aligns the checkbox items in a column",
          "type": "boolean | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the checkbox group\n- **sm** renders the default size of the checkbox items\n- **md** renders the small size of the checkbox items",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "properties": [
        {
          "name": "state",
          "attribute": "state",
          "description": "Specifies the state of the checkbox group\n- **valid** applies styles to indicate the checkbox group is valid\n- **invalid** applies styles to indicate the checkbox group is invalid\n- **indeterminate** applies styles to indicate the checkbox group is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "inline",
          "attribute": "inline",
          "description": "Inline?\n- **true** aligns the checkbox items in a row\n- **false** aligns the checkbox items in a column",
          "type": "boolean | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the checkbox group\n- **sm** renders the default size of the checkbox items\n- **md** renders the small size of the checkbox items",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ]
    },
    {
      "name": "nef-drawer",
      "path": "./src/components/Drawer/index.ts",
      "description": "Component: nef-drawer\n- **slot** `header`: Slot for the drawer header\n- **slot** `content`: Slot for the drawer content\n- **slot** `footer`: Slot for the drawer footer",
      "attributes": [
        {
          "name": "open",
          "description": "Indicates whether the drawer is open.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "heading",
          "description": "The heading text for the drawer.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "backdrop",
          "description": "Indicates whether the scrim (backdrop) is visible.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "placement",
          "description": "Placement of the drawer: \"left\", \"right\", \"top\", \"bottom\"",
          "type": "Omit<Placement, \"top-start\" | \"top-end\" | \"right-start\" | \"right-end\" | \"bottom-start\" | \"bottom-end\" | \"left-start\" | \"left-end\">",
          "default": "\"right\""
        },
        {
          "name": "showInput",
          "description": "Indicates whether the input field is visible.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "showCloseButton",
          "description": "Indicates whether the close button is visible.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "inputPlaceholder",
          "description": "Placeholder text for the input field.",
          "type": "string",
          "default": "\"Enter text...\""
        },
        {
          "name": "clickOnOutside",
          "description": "Indicates whether clicking on the outside of the drawer should close it.",
          "type": "boolean",
          "default": "true"
        }
      ],
      "properties": [
        {
          "name": "open",
          "attribute": "open",
          "description": "Indicates whether the drawer is open.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "heading",
          "attribute": "heading",
          "description": "The heading text for the drawer.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "backdrop",
          "attribute": "backdrop",
          "description": "Indicates whether the scrim (backdrop) is visible.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "placement",
          "attribute": "placement",
          "description": "Placement of the drawer: \"left\", \"right\", \"top\", \"bottom\"",
          "type": "Omit<Placement, \"top-start\" | \"top-end\" | \"right-start\" | \"right-end\" | \"bottom-start\" | \"bottom-end\" | \"left-start\" | \"left-end\">",
          "default": "\"right\""
        },
        {
          "name": "showInput",
          "attribute": "showInput",
          "description": "Indicates whether the input field is visible.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "showCloseButton",
          "attribute": "showCloseButton",
          "description": "Indicates whether the close button is visible.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "inputPlaceholder",
          "attribute": "inputPlaceholder",
          "description": "Placeholder text for the input field.",
          "type": "string",
          "default": "\"Enter text...\""
        },
        {
          "name": "clickOnOutside",
          "attribute": "clickOnOutside",
          "description": "Indicates whether clicking on the outside of the drawer should close it.",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "drawer-opened"
        },
        {
          "name": "drawer-closed"
        }
      ]
    },
    {
      "name": "nef-empty-state",
      "path": "./src/components/Empty-state/index.ts",
      "description": "Component: nef-empty-state\n- **slot** `title`: Slot for the title of the empty state\n- **slot** `description`: Slot for the description of the empty state\n- **slot** `action`: Slot for any action buttons that can be displayed in the empty state",
      "attributes": [
        {
          "name": "title",
          "description": "The title of the empty state.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "icon",
          "description": "The icon of the empty state.",
          "type": "string",
          "default": "\"\""
        }
      ],
      "properties": [
        {
          "name": "title",
          "attribute": "title",
          "description": "The title of the empty state.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "icon",
          "attribute": "icon",
          "description": "The icon of the empty state.",
          "type": "string",
          "default": "\"\""
        }
      ]
    },
    {
      "name": "nef-field-note",
      "path": "./src/components/FieldNote/index.ts",
      "description": "Component: nef-field-note\n- **slot** `default`: Slot for a field note content",
      "attributes": [
        {
          "name": "state",
          "description": "Specifies the state of the field note\n- **valid** applies styles to indicate the field note is valid\n- **invalid** applies styles to indicate the field note is invalid\n- **indeterminate** applies styles to indicate the field note is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "disabled",
          "description": "Specifies that field note should be disabled",
          "type": "boolean | undefined"
        }
      ],
      "properties": [
        {
          "name": "state",
          "attribute": "state",
          "description": "Specifies the state of the field note\n- **valid** applies styles to indicate the field note is valid\n- **invalid** applies styles to indicate the field note is invalid\n- **indeterminate** applies styles to indicate the field note is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Specifies that field note should be disabled",
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "nef-file-upload",
      "path": "./src/components/FileUpload/index.ts",
      "description": "Component: nef-file-upload\n- **slot** `icon`: Slot to replace the default icon\n- **slot** `heading`: Slot to replace the default heading content\n- **slot** `subheading`: Slot to replace the default subheading content",
      "attributes": [
        {
          "name": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string",
          "default": "\"File Upload\""
        },
        {
          "name": "name",
          "description": "Specifies the name of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "multiple",
          "description": "Allows multiple files to be uploaded",
          "type": "boolean | undefined"
        },
        {
          "name": "accept",
          "description": "Accepted file types for the file upload",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "maxFileSize",
          "description": "Maximum file size in bytes",
          "type": "number | undefined"
        },
        {
          "name": "state",
          "description": "State of the file upload",
          "type": "\"error\" | FormState | undefined"
        },
        {
          "name": "errorMessage",
          "description": "Error message that displays when the file upload has state error",
          "type": "string | undefined",
          "default": "\"Upload failed, try again\""
        },
        {
          "name": "type",
          "description": "Specifies the type of an `<input>` element",
          "type": "string",
          "default": "\"file\""
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string",
          "default": "\"File Upload\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Specifies the name of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "multiple",
          "attribute": "multiple",
          "description": "Allows multiple files to be uploaded",
          "type": "boolean | undefined"
        },
        {
          "name": "accept",
          "attribute": "accept",
          "description": "Accepted file types for the file upload",
          "type": "string | undefined",
          "default": "\"\""
        },
        {
          "name": "maxFileSize",
          "attribute": "maxFileSize",
          "description": "Maximum file size in bytes",
          "type": "number | undefined"
        },
        {
          "name": "state",
          "attribute": "state",
          "description": "State of the file upload",
          "type": "\"error\" | FormState | undefined"
        },
        {
          "name": "errorMessage",
          "attribute": "errorMessage",
          "description": "Error message that displays when the file upload has state error",
          "type": "string | undefined",
          "default": "\"Upload failed, try again\""
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Specifies the type of an `<input>` element",
          "type": "string",
          "default": "\"file\""
        }
      ],
      "events": [
        {
          "name": "nef-file-upload-drop"
        },
        {
          "name": "nef-file-upload-change"
        }
      ]
    },
    {
      "name": "nef-flex",
      "path": "./src/components/Flex/index.ts",
      "attributes": [
        {
          "name": "flexDirection",
          "description": "flex-direction sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).",
          "type": "string | undefined"
        },
        {
          "name": "inlineFlex",
          "description": "Determines whether the flex container display is inline or not.",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "textAlign",
          "description": "Sets the alignment of the text content in the flex container.",
          "type": "string | undefined",
          "default": "\"left\""
        },
        {
          "name": "wrap",
          "description": "Sets whether the flex items are forced in a single line or can be flowed into multiple lines.",
          "type": "string | undefined"
        },
        {
          "name": "gap",
          "description": "Gap between flex items.",
          "type": "string | undefined",
          "default": "\"initial\""
        },
        {
          "name": "alignItems",
          "type": "AlignItemsTypeSimple | { align: AlignItemsTypeSimple; size: Breakpoints; }[]"
        },
        {
          "name": "justifyContent",
          "type": "JustifyContentTypeSimple | { justify: JustifyContentTypeSimple; size: Breakpoints; }[]"
        }
      ],
      "properties": [
        {
          "name": "flexDirection",
          "attribute": "flexDirection",
          "description": "flex-direction sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).",
          "type": "string | undefined"
        },
        {
          "name": "inlineFlex",
          "attribute": "inlineFlex",
          "description": "Determines whether the flex container display is inline or not.",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "textAlign",
          "attribute": "textAlign",
          "description": "Sets the alignment of the text content in the flex container.",
          "type": "string | undefined",
          "default": "\"left\""
        },
        {
          "name": "wrap",
          "attribute": "wrap",
          "description": "Sets whether the flex items are forced in a single line or can be flowed into multiple lines.",
          "type": "string | undefined"
        },
        {
          "name": "gap",
          "attribute": "gap",
          "description": "Gap between flex items.",
          "type": "string | undefined",
          "default": "\"initial\""
        },
        {
          "name": "alignItems",
          "attribute": "alignItems",
          "type": "AlignItemsTypeSimple | { align: AlignItemsTypeSimple; size: Breakpoints; }[]"
        },
        {
          "name": "justifyContent",
          "attribute": "justifyContent",
          "type": "JustifyContentTypeSimple | { justify: JustifyContentTypeSimple; size: Breakpoints; }[]"
        }
      ]
    },
    {
      "name": "nef-form-time-field",
      "path": "./src/components/FormTimeField/index.ts",
      "description": "Component: nef-form-time-field\n- **slot** `label`: Slot for a label\n- **slot** `error-text`: Slot for error text that displays when the time field is invalid\n- **slot** `help-text`: Slot for help text that displays before the time field",
      "attributes": [
        {
          "name": "state",
          "description": "Specifies the state of the text input\n- **valid** applies styles to indicate the text input is valid\n- **invalid** applies styles to indicate the text input is invalid\n- **indeterminate** applies styles to indicate the text input is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the text input\n- **sm** render an `<input>` with the smaller padding\n- **md** render an `<input>` with the default padding\n- **lg** render an `<input>` with the larger padding",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "description": "Specifies the value of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "readOnly",
          "description": "Specifies that an input field is read-only",
          "type": "boolean | undefined"
        },
        {
          "name": "autoFocus",
          "description": "Specifies that an `<input>` element should automatically get focus when the page loads",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "hourClock",
          "description": "Hour clock\n- **12** 12 hour clock (default)\n- **24** 24 hour clock",
          "type": "\"12\" | \"24\"",
          "default": "\"12\""
        },
        {
          "name": "hasSeconds",
          "description": "Has seconds?\n- **true** displays the second input\n- **false** hides the second input",
          "type": "boolean | undefined"
        },
        {
          "name": "hasMilliseconds",
          "description": "Has milliseconds?\n- **true** displays the millisecond input as well as the second input\n- **false** hides the millisecond input",
          "type": "boolean | undefined"
        },
        {
          "name": "hourPlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for hour",
          "type": "string | undefined"
        },
        {
          "name": "hourValue",
          "description": "Specifies the value of an `<input>` element for hour",
          "type": "number | undefined"
        },
        {
          "name": "hourMax",
          "description": "Specifies a maximum value for an `<input>` element for hour",
          "type": "number | undefined"
        },
        {
          "name": "minutePlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for minute",
          "type": "string | undefined"
        },
        {
          "name": "minuteValue",
          "description": "Specifies the value of an `<input>` element for minute",
          "type": "number | undefined"
        },
        {
          "name": "minuteMax",
          "description": "Specifies a maximum value for an `<input>` element for minute",
          "type": "number | undefined"
        },
        {
          "name": "secondPlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for second",
          "type": "string | undefined"
        },
        {
          "name": "secondValue",
          "description": "Specifies the value of an `<input>` element for second",
          "type": "number | undefined"
        },
        {
          "name": "secondMax",
          "description": "Specifies a maximum value for an `<input>` element for second",
          "type": "number | undefined"
        },
        {
          "name": "millisecondPlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for millisecond",
          "type": "string | undefined"
        },
        {
          "name": "millisecondValue",
          "description": "Specifies the value of an `<input>` element for millisecond",
          "type": "number | undefined"
        },
        {
          "name": "millisecondMax",
          "description": "Specifies a maximum value for an `<input>` element for millisecond",
          "type": "number | undefined"
        },
        {
          "name": "separator",
          "description": "Separator\n- **colon** Displays a colon between the hours, minute, and second (default)\n- **decimal** Displays a decimal point between the hours, minute, and second",
          "type": "\"colon\" | \"decimal\"",
          "default": "\"colon\""
        }
      ],
      "properties": [
        {
          "name": "state",
          "attribute": "state",
          "description": "Specifies the state of the text input\n- **valid** applies styles to indicate the text input is valid\n- **invalid** applies styles to indicate the text input is invalid\n- **indeterminate** applies styles to indicate the text input is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the text input\n- **sm** render an `<input>` with the smaller padding\n- **md** render an `<input>` with the default padding\n- **lg** render an `<input>` with the larger padding",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Specifies the value of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "readOnly",
          "attribute": "readOnly",
          "description": "Specifies that an input field is read-only",
          "type": "boolean | undefined"
        },
        {
          "name": "autoFocus",
          "attribute": "autoFocus",
          "description": "Specifies that an `<input>` element should automatically get focus when the page loads",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "hourClock",
          "attribute": "hourClock",
          "description": "Hour clock\n- **12** 12 hour clock (default)\n- **24** 24 hour clock",
          "type": "\"12\" | \"24\"",
          "default": "\"12\""
        },
        {
          "name": "hasSeconds",
          "attribute": "hasSeconds",
          "description": "Has seconds?\n- **true** displays the second input\n- **false** hides the second input",
          "type": "boolean | undefined"
        },
        {
          "name": "hasMilliseconds",
          "attribute": "hasMilliseconds",
          "description": "Has milliseconds?\n- **true** displays the millisecond input as well as the second input\n- **false** hides the millisecond input",
          "type": "boolean | undefined"
        },
        {
          "name": "hourPlaceholder",
          "attribute": "hourPlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for hour",
          "type": "string | undefined"
        },
        {
          "name": "hourValue",
          "attribute": "hourValue",
          "description": "Specifies the value of an `<input>` element for hour",
          "type": "number | undefined"
        },
        {
          "name": "hourMax",
          "attribute": "hourMax",
          "description": "Specifies a maximum value for an `<input>` element for hour",
          "type": "number | undefined"
        },
        {
          "name": "minutePlaceholder",
          "attribute": "minutePlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for minute",
          "type": "string | undefined"
        },
        {
          "name": "minuteValue",
          "attribute": "minuteValue",
          "description": "Specifies the value of an `<input>` element for minute",
          "type": "number | undefined"
        },
        {
          "name": "minuteMax",
          "attribute": "minuteMax",
          "description": "Specifies a maximum value for an `<input>` element for minute",
          "type": "number | undefined"
        },
        {
          "name": "secondPlaceholder",
          "attribute": "secondPlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for second",
          "type": "string | undefined"
        },
        {
          "name": "secondValue",
          "attribute": "secondValue",
          "description": "Specifies the value of an `<input>` element for second",
          "type": "number | undefined"
        },
        {
          "name": "secondMax",
          "attribute": "secondMax",
          "description": "Specifies a maximum value for an `<input>` element for second",
          "type": "number | undefined"
        },
        {
          "name": "millisecondPlaceholder",
          "attribute": "millisecondPlaceholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element for millisecond",
          "type": "string | undefined"
        },
        {
          "name": "millisecondValue",
          "attribute": "millisecondValue",
          "description": "Specifies the value of an `<input>` element for millisecond",
          "type": "number | undefined"
        },
        {
          "name": "millisecondMax",
          "attribute": "millisecondMax",
          "description": "Specifies a maximum value for an `<input>` element for millisecond",
          "type": "number | undefined"
        },
        {
          "name": "separator",
          "attribute": "separator",
          "description": "Separator\n- **colon** Displays a colon between the hours, minute, and second (default)\n- **decimal** Displays a decimal point between the hours, minute, and second",
          "type": "\"colon\" | \"decimal\"",
          "default": "\"colon\""
        },
        {
          "name": "isAm",
          "description": "State to track AM/PM",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "nef-form-time-field-change"
        },
        {
          "name": "nef-form-time-field-focus"
        },
        {
          "name": "nef-form-time-field-blur"
        }
      ]
    },
    {
      "name": "nef-icon",
      "path": "./src/components/Icon/index.ts",
      "attributes": [
        {
          "name": "icon",
          "description": "The name of the icon to display.",
          "type": "\"function\" | \"info\" | \"error\" | \"warning\" | \"image\" | \"search\" | \"repeat\" | \"anchor\" | \"link\" | \"start\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | ... 3437 more ... | \"zoom_out_map\"",
          "default": "\"check\""
        },
        {
          "name": "size",
          "description": "The size of the icon.\n- **8px** - Extra small size.\n- **12px** - Small size.\n- **16px** - Medium size.\n- **24px** - Large size.\n- **32px** - Extra large size.\n- **40px** - Extra extra large size.\n- **48px** - Extra extra extra large size.\n- **64px** - Extra extra extra extra large size.",
          "type": "IconSize",
          "default": "\"24px\""
        },
        {
          "name": "iconTitle",
          "description": "The title of the icon. This is used for accessibility.",
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "icon",
          "attribute": "icon",
          "description": "The name of the icon to display.",
          "type": "\"function\" | \"info\" | \"error\" | \"warning\" | \"image\" | \"search\" | \"repeat\" | \"anchor\" | \"link\" | \"start\" | \"10k\" | \"10mp\" | \"11mp\" | \"123\" | \"12mp\" | \"13mp\" | \"14mp\" | \"15mp\" | \"16mp\" | ... 3437 more ... | \"zoom_out_map\"",
          "default": "\"check\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "The size of the icon.\n- **8px** - Extra small size.\n- **12px** - Small size.\n- **16px** - Medium size.\n- **24px** - Large size.\n- **32px** - Extra large size.\n- **40px** - Extra extra large size.\n- **48px** - Extra extra extra large size.\n- **64px** - Extra extra extra extra large size.",
          "type": "IconSize",
          "default": "\"24px\""
        },
        {
          "name": "iconTitle",
          "attribute": "iconTitle",
          "description": "The title of the icon. This is used for accessibility.",
          "type": "string"
        }
      ]
    },
    {
      "name": "nef-link",
      "path": "./src/components/Link/Link.ts",
      "attributes": [
        {
          "name": "href",
          "description": "URL to navigate webpage",
          "type": "string | undefined"
        },
        {
          "name": "target",
          "description": "Target specifies where to open the linked document\n1) Target is optional\n2) _blank: Opens the linked document in a new window or tab\n3) _self: Opens the linked document in the same frame as it was clicked\n4) _parent: Opens the linked document in the parent frame\n5) _top: Opens the linked document in the full body of the window",
          "type": "Targets | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled state of the link",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "variant",
          "description": "Color variants for different backgrounds\n1) Neutral variant is used for light backgrounds",
          "type": "Variants | undefined"
        },
        {
          "name": "size",
          "description": "Size of the link\n1) Default size is medium\n2) Small size is used for smaller text",
          "type": "Omit<Sizes, \"md\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"sm\""
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "description": "URL to navigate webpage",
          "type": "string | undefined"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "Target specifies where to open the linked document\n1) Target is optional\n2) _blank: Opens the linked document in a new window or tab\n3) _self: Opens the linked document in the same frame as it was clicked\n4) _parent: Opens the linked document in the parent frame\n5) _top: Opens the linked document in the full body of the window",
          "type": "Targets | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disabled state of the link",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Color variants for different backgrounds\n1) Neutral variant is used for light backgrounds",
          "type": "Variants | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Size of the link\n1) Default size is medium\n2) Small size is used for smaller text",
          "type": "Omit<Sizes, \"md\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"sm\""
        }
      ]
    },
    {
      "name": "nef-list-item",
      "path": "./src/components/ListItem/index.ts",
      "attributes": [
        {
          "name": "heading",
          "description": "The heading of the list item.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "subheading",
          "description": "The subheading of the list item.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "size",
          "description": "The size of the list item.\n- **sm** - Small size.\n- **md** - Medium size.",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\" | \"xxl\">",
          "default": "\"md\""
        },
        {
          "name": "indented",
          "description": "Whether the list item is indented.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "expandable",
          "description": "Whether the list item is expandable.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "expanded",
          "description": "Whether the list item is expanded.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "heading",
          "attribute": "heading",
          "description": "The heading of the list item.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "subheading",
          "attribute": "subheading",
          "description": "The subheading of the list item.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "The size of the list item.\n- **sm** - Small size.\n- **md** - Medium size.",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\" | \"xxl\">",
          "default": "\"md\""
        },
        {
          "name": "indented",
          "attribute": "indented",
          "description": "Whether the list item is indented.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "expandable",
          "attribute": "expandable",
          "description": "Whether the list item is expandable.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "expanded",
          "attribute": "expanded",
          "description": "Whether the list item is expanded.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "events": [
        {
          "name": "nef-list-item-expanded"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "the heading slot of the list item."
        },
        {
          "name": "before",
          "description": "the slot before the heading and subheading"
        }
      ]
    },
    {
      "name": "nef-logo",
      "path": "./src/components/Logo/index.ts",
      "attributes": [
        {
          "name": "variant",
          "description": "Style variant\n- **mini** - displays the Nasdaq \"N\" logo without accompanying wordmark\n- **full** - displays the Nasdaq N logo and wordmark",
          "type": "LogoVariant | undefined",
          "default": "\"mini\""
        },
        {
          "name": "inverted",
          "description": "Renders the knockout version of the logo when true",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "width",
          "description": "The width of the SVG asset, declared as a string in order to pass in any CSS value (px, rem, etc)",
          "type": "string | undefined"
        },
        {
          "name": "height",
          "description": "The width of the SVG asset, declared as a string in order to pass in any CSS value (px, rem, etc)",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Style variant\n- **mini** - displays the Nasdaq \"N\" logo without accompanying wordmark\n- **full** - displays the Nasdaq N logo and wordmark",
          "type": "LogoVariant | undefined",
          "default": "\"mini\""
        },
        {
          "name": "inverted",
          "attribute": "inverted",
          "description": "Renders the knockout version of the logo when true",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "width",
          "attribute": "width",
          "description": "The width of the SVG asset, declared as a string in order to pass in any CSS value (px, rem, etc)",
          "type": "string | undefined"
        },
        {
          "name": "height",
          "attribute": "height",
          "description": "The width of the SVG asset, declared as a string in order to pass in any CSS value (px, rem, etc)",
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "nef-metric",
      "path": "./src/components/Metric/index.ts",
      "attributes": [
        {
          "name": "variant",
          "description": "The variant of the metric.\n- **default** - Default variant.\n- **primary** - Primary variant.\n- **secondary** - Secondary variant.\n- **success** - Success variant.\n- **warning** - Warning variant.\n- **error** - Error variant.",
          "type": "\"success\" | \"error\" | \"warning\" | \"primary\" | \"secondary\" | \"default\"",
          "default": "\"default\""
        },
        {
          "name": "size",
          "description": "The size of the metric.\n- **default** - Default size.\n- **lg** - Large size.\n- **sm** - Small size.\n- **xs** - Extra small size.",
          "type": "\"xs\" | \"sm\" | \"lg\" | \"default\"",
          "default": "\"default\""
        },
        {
          "name": "showTrendArrow",
          "description": "Whether to show the trend arrow.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "trend",
          "description": "The direction of the trend arrow.\n- **up** - Upward trend.\n- **down** - Downward trend.",
          "type": "\"up\" | \"down\"",
          "default": "\"up\""
        },
        {
          "name": "alignment",
          "description": "The alignment of the metric.\n- **left** - Left aligned.\n- **center** - Center aligned.\n- **right** - Right aligned.",
          "type": "\"center\" | \"left\" | \"right\"",
          "default": "\"left\""
        },
        {
          "name": "isInteractive",
          "description": "Whether the component is interactive.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The variant of the metric.\n- **default** - Default variant.\n- **primary** - Primary variant.\n- **secondary** - Secondary variant.\n- **success** - Success variant.\n- **warning** - Warning variant.\n- **error** - Error variant.",
          "type": "\"success\" | \"error\" | \"warning\" | \"primary\" | \"secondary\" | \"default\"",
          "default": "\"default\""
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "The size of the metric.\n- **default** - Default size.\n- **lg** - Large size.\n- **sm** - Small size.\n- **xs** - Extra small size.",
          "type": "\"xs\" | \"sm\" | \"lg\" | \"default\"",
          "default": "\"default\""
        },
        {
          "name": "showTrendArrow",
          "attribute": "showTrendArrow",
          "description": "Whether to show the trend arrow.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "trend",
          "attribute": "trend",
          "description": "The direction of the trend arrow.\n- **up** - Upward trend.\n- **down** - Downward trend.",
          "type": "\"up\" | \"down\"",
          "default": "\"up\""
        },
        {
          "name": "alignment",
          "attribute": "alignment",
          "description": "The alignment of the metric.\n- **left** - Left aligned.\n- **center** - Center aligned.\n- **right** - Right aligned.",
          "type": "\"center\" | \"left\" | \"right\"",
          "default": "\"left\""
        },
        {
          "name": "isInteractive",
          "attribute": "isInteractive",
          "description": "Whether the component is interactive.",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "nef-modal",
      "path": "./src/components/Modal/index.ts",
      "attributes": [
        {
          "name": "ariaLabelledBy",
          "description": "Aria labelled by attribute",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "description": "Aria describedby attribute",
          "type": "string | undefined"
        },
        {
          "name": "progressIsActive",
          "description": "Shows the active number of active steps in the modal",
          "type": "number | undefined"
        },
        {
          "name": "progressLength",
          "description": "Numner of progress steps in the modal",
          "type": "number | undefined"
        },
        {
          "name": "removeBackdrop",
          "description": "Determines whether backdrop should be displayed",
          "type": "boolean | undefined"
        },
        {
          "name": "removeCloseOnOutsideClick",
          "description": "Determines whether clicking outside of modal should close the modal",
          "type": "boolean | undefined"
        },
        {
          "name": "height",
          "description": "Default height for resizable modal",
          "type": "number | undefined"
        },
        {
          "name": "width",
          "description": "Default width for resizable modal",
          "type": "number | undefined"
        },
        {
          "name": "size",
          "description": "Size of the component, can take on a value of `sm`, `md`, `lg` or `flex`",
          "type": "\"sm\" | \"md\" | \"lg\" | \"flex\" | undefined",
          "default": "\"md\""
        },
        {
          "name": "heading",
          "description": "Modal heading text",
          "type": "string | undefined"
        },
        {
          "name": "subheading",
          "description": "Modal subheading text",
          "type": "string | undefined"
        },
        {
          "name": "isOpen",
          "description": "Boolean indicating whether component should be visible",
          "type": "boolean | undefined"
        },
        {
          "name": "isDraggable",
          "description": "Boolean indicating whether component should be visible",
          "type": "boolean | undefined"
        },
        {
          "name": "isResizable",
          "description": "Boolean indicating whether component should be visible",
          "type": "boolean | undefined"
        },
        {
          "name": "resizeButtonText",
          "description": "Resize button text",
          "type": "string | undefined",
          "default": "\"Resize\""
        },
        {
          "name": "closeButtonText",
          "description": "Close button text",
          "type": "string | undefined",
          "default": "\"Close\""
        }
      ],
      "properties": [
        {
          "name": "ariaLabelledBy",
          "attribute": "ariaLabelledBy",
          "description": "Aria labelled by attribute",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "Aria describedby attribute",
          "type": "string | undefined"
        },
        {
          "name": "progressIsActive",
          "attribute": "progressIsActive",
          "description": "Shows the active number of active steps in the modal",
          "type": "number | undefined"
        },
        {
          "name": "progressLength",
          "attribute": "progressLength",
          "description": "Numner of progress steps in the modal",
          "type": "number | undefined"
        },
        {
          "name": "removeBackdrop",
          "attribute": "removeBackdrop",
          "description": "Determines whether backdrop should be displayed",
          "type": "boolean | undefined"
        },
        {
          "name": "removeCloseOnOutsideClick",
          "attribute": "removeCloseOnOutsideClick",
          "description": "Determines whether clicking outside of modal should close the modal",
          "type": "boolean | undefined"
        },
        {
          "name": "height",
          "attribute": "height",
          "description": "Default height for resizable modal",
          "type": "number | undefined"
        },
        {
          "name": "width",
          "attribute": "width",
          "description": "Default width for resizable modal",
          "type": "number | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Size of the component, can take on a value of `sm`, `md`, `lg` or `flex`",
          "type": "\"sm\" | \"md\" | \"lg\" | \"flex\" | undefined",
          "default": "\"md\""
        },
        {
          "name": "heading",
          "attribute": "heading",
          "description": "Modal heading text",
          "type": "string | undefined"
        },
        {
          "name": "subheading",
          "attribute": "subheading",
          "description": "Modal subheading text",
          "type": "string | undefined"
        },
        {
          "name": "zIndex",
          "description": "The z-index value to be passed into the modal",
          "type": "number | undefined"
        },
        {
          "name": "isOpen",
          "attribute": "isOpen",
          "description": "Boolean indicating whether component should be visible",
          "type": "boolean | undefined"
        },
        {
          "name": "isDraggable",
          "attribute": "isDraggable",
          "description": "Boolean indicating whether component should be visible",
          "type": "boolean | undefined"
        },
        {
          "name": "isResizable",
          "attribute": "isResizable",
          "description": "Boolean indicating whether component should be visible",
          "type": "boolean | undefined"
        },
        {
          "name": "resizeButtonText",
          "attribute": "resizeButtonText",
          "description": "Resize button text",
          "type": "string | undefined",
          "default": "\"Resize\""
        },
        {
          "name": "closeButtonText",
          "attribute": "closeButtonText",
          "description": "Close button text",
          "type": "string | undefined",
          "default": "\"Close\""
        },
        {
          "name": "dragging",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "offset",
          "type": "{ x: number; y: number; }",
          "default": "{\"x\":0,\"y\":0}"
        },
        {
          "name": "handleOnClickOutside"
        },
        {
          "name": "handleTriggerClick"
        }
      ],
      "events": [
        {
          "name": "nef-close-modal"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "default slot in body of the moda"
        }
      ]
    },
    {
      "name": "nef-pagination",
      "path": "./src/components/Pagination/index.ts",
      "attributes": [
        {
          "name": "disablePageNumbers",
          "description": "Disable the display of page numbers.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "showPageSizeDropdown",
          "description": "Show the page size dropdown.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "totalDataLength",
          "description": "The total number of data items.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "currentPage",
          "description": "The current page number.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "itemsPerPage",
          "description": "The number of items per page.",
          "type": "number",
          "default": "10"
        },
        {
          "name": "hidePageDataCount",
          "description": "Hide the page data count.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "ariaLabelPrevious",
          "description": "Aria label for the previous page button.",
          "type": "string",
          "default": "\"Previous page\""
        },
        {
          "name": "ariaLabelNext",
          "description": "Aria label for the next page button.",
          "type": "string",
          "default": "\"Next page\""
        },
        {
          "name": "fieldId",
          "description": "ID for the field.",
          "type": "string",
          "default": "\"pagination\""
        }
      ],
      "properties": [
        {
          "name": "disablePageNumbers",
          "attribute": "disablePageNumbers",
          "description": "Disable the display of page numbers.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "showPageSizeDropdown",
          "attribute": "showPageSizeDropdown",
          "description": "Show the page size dropdown.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "totalDataLength",
          "attribute": "totalDataLength",
          "description": "The total number of data items.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "currentPage",
          "attribute": "currentPage",
          "description": "The current page number.",
          "type": "number",
          "default": "1"
        },
        {
          "name": "itemsPerPage",
          "attribute": "itemsPerPage",
          "description": "The number of items per page.",
          "type": "number",
          "default": "10"
        },
        {
          "name": "hidePageDataCount",
          "attribute": "hidePageDataCount",
          "description": "Hide the page data count.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "ariaLabelPrevious",
          "attribute": "ariaLabelPrevious",
          "description": "Aria label for the previous page button.",
          "type": "string",
          "default": "\"Previous page\""
        },
        {
          "name": "ariaLabelNext",
          "attribute": "ariaLabelNext",
          "description": "Aria label for the next page button.",
          "type": "string",
          "default": "\"Next page\""
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "ID for the field.",
          "type": "string",
          "default": "\"pagination\""
        }
      ],
      "events": [
        {
          "name": "nef-pagination-page-change"
        },
        {
          "name": "nef-pagination-page-size-change"
        }
      ]
    },
    {
      "name": "nef-popover",
      "path": "./src/components/Popover/index.ts",
      "attributes": [
        {
          "name": "isActive",
          "description": "Indicates whether the popover is open.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placement",
          "description": "The placement of the popover.\n- **bottom** - Popover appears below the trigger.\n- **top** - Popover appears above the trigger.\n- **left** - Popover appears to the left of the trigger.\n- **right** - Popover appears to the right of the trigger.",
          "type": "Placement | undefined",
          "default": "\"bottom\""
        },
        {
          "name": "isAbsolute",
          "description": "Indicates whether the popover is fixed.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "containInParent",
          "description": "Indicates whether the popover should be contained within its parent.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isDropdown",
          "description": "Indicates if popover contains dropdown items",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "removeIsClick",
          "description": "Indicates whether the click event should be removed on the trigger.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isHover",
          "description": "Indicates whether the popover should open on hover.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isFocus",
          "description": "Indicates whether the popover should open on focus.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "mouseFollowing",
          "description": "Indicates whether the popover should follow the mouse on right click",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "height",
          "description": "Height of the popover container",
          "type": "string | undefined"
        },
        {
          "name": "maxHeight",
          "description": "Max height of the popover container",
          "type": "string | undefined"
        },
        {
          "name": "maxWidth",
          "description": "Max with of the popover container",
          "type": "string | undefined"
        },
        {
          "name": "overflow",
          "description": "Overflow on popover container",
          "type": "\"auto\" | \"hidden\" | \"scroll\" | \"visible\" | undefined"
        }
      ],
      "properties": [
        {
          "name": "isActive",
          "attribute": "isActive",
          "description": "Indicates whether the popover is open.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "placement",
          "attribute": "placement",
          "description": "The placement of the popover.\n- **bottom** - Popover appears below the trigger.\n- **top** - Popover appears above the trigger.\n- **left** - Popover appears to the left of the trigger.\n- **right** - Popover appears to the right of the trigger.",
          "type": "Placement | undefined",
          "default": "\"bottom\""
        },
        {
          "name": "isAbsolute",
          "attribute": "isAbsolute",
          "description": "Indicates whether the popover is fixed.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "containInParent",
          "attribute": "containInParent",
          "description": "Indicates whether the popover should be contained within its parent.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isDropdown",
          "attribute": "isDropdown",
          "description": "Indicates if popover contains dropdown items",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "removeIsClick",
          "attribute": "removeIsClick",
          "description": "Indicates whether the click event should be removed on the trigger.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isHover",
          "attribute": "isHover",
          "description": "Indicates whether the popover should open on hover.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isFocus",
          "attribute": "isFocus",
          "description": "Indicates whether the popover should open on focus.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "mouseFollowing",
          "attribute": "mouseFollowing",
          "description": "Indicates whether the popover should follow the mouse on right click",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "height",
          "attribute": "height",
          "description": "Height of the popover container",
          "type": "string | undefined"
        },
        {
          "name": "maxHeight",
          "attribute": "maxHeight",
          "description": "Max height of the popover container",
          "type": "string | undefined"
        },
        {
          "name": "maxWidth",
          "attribute": "maxWidth",
          "description": "Max with of the popover container",
          "type": "string | undefined"
        },
        {
          "name": "overflow",
          "attribute": "overflow",
          "description": "Overflow on popover container",
          "type": "\"auto\" | \"hidden\" | \"scroll\" | \"visible\" | undefined"
        },
        {
          "name": "popoverWrapper",
          "description": "Wrapper HTML element on the component",
          "type": "HTMLDivElement"
        },
        {
          "name": "popoverTrigger",
          "description": "Popover trigger",
          "type": "HTMLDivElement"
        },
        {
          "name": "popoverContainer",
          "description": "Popover container",
          "type": "HTMLDivElement"
        },
        {
          "name": "slottedTrigger",
          "type": "HTMLElement[]"
        },
        {
          "name": "handleScroll"
        },
        {
          "name": "handleResize"
        },
        {
          "name": "handleOnClickOutside"
        },
        {
          "name": "handleWindowEvents"
        },
        {
          "name": "x",
          "description": "X position of the mouse to position popover horizontally",
          "type": "number",
          "default": "0"
        },
        {
          "name": "y",
          "description": "Y position of the mouse to position popover vertically",
          "type": "number",
          "default": "0"
        }
      ],
      "events": [
        {
          "name": "nef-popover-show"
        },
        {
          "name": "nef-popover-hide"
        }
      ]
    },
    {
      "name": "nef-popover-button",
      "path": "./src/components/PopoverButton/index.ts",
      "attributes": [
        {
          "name": "href",
          "description": "The URL the button should link to.",
          "type": "string | undefined"
        },
        {
          "name": "disabled",
          "description": "Whether the button is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isActive",
          "description": "Triggers subitem menu",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "flyoutPosition",
          "description": "Flyout position of the popover relative to the menu next to it",
          "type": "Placement | undefined",
          "default": "\"right-end\""
        },
        {
          "name": "hasSubButtons",
          "description": "Triggers icon and nested popover for subitems",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "target",
          "description": "The target attribute specifies where to open the linked document.\n- **_blank** - Opens the linked document in a new window or tab.\n- **_self** - Opens the linked document in the same frame as it was clicked (default).\n- **_parent** - Opens the linked document in the parent frame.\n- **_top** - Opens the linked document in the full body of the window.",
          "type": "\"_blank\" | \"_self\" | \"_parent\" | \"_top\"",
          "default": "\"_self\""
        }
      ],
      "properties": [
        {
          "name": "styles",
          "type": "never[]",
          "default": "[]"
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "The URL the button should link to.",
          "type": "string | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Whether the button is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isActive",
          "attribute": "isActive",
          "description": "Triggers subitem menu",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "flyoutPosition",
          "attribute": "flyoutPosition",
          "description": "Flyout position of the popover relative to the menu next to it",
          "type": "Placement | undefined",
          "default": "\"right-end\""
        },
        {
          "name": "hasSubButtons",
          "attribute": "hasSubButtons",
          "description": "Triggers icon and nested popover for subitems",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "target",
          "attribute": "target",
          "description": "The target attribute specifies where to open the linked document.\n- **_blank** - Opens the linked document in a new window or tab.\n- **_self** - Opens the linked document in the same frame as it was clicked (default).\n- **_parent** - Opens the linked document in the parent frame.\n- **_top** - Opens the linked document in the full body of the window.",
          "type": "\"_blank\" | \"_self\" | \"_parent\" | \"_top\"",
          "default": "\"_self\""
        },
        {
          "name": "nefPopoverButton",
          "description": "Query the .nef-c-popover-button",
          "type": "HTMLElement"
        },
        {
          "name": "nefPopoverButtonDropdownPanel",
          "description": "Query the .nef-c-popover-button",
          "type": "Popover"
        }
      ]
    },
    {
      "name": "nef-popover-button-list",
      "path": "./src/components/PopoverButtonList/index.ts",
      "properties": [
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"unsafeCSS(styles)\""
        },
        {
          "name": "popoverButtons",
          "type": "PopoverButton[]"
        }
      ]
    },
    {
      "name": "nef-progress",
      "path": "./src/components/Progress/index.ts",
      "attributes": [
        {
          "name": "ariaLabelledBy",
          "description": "aria-labelledby attribute",
          "type": "string | undefined"
        },
        {
          "name": "bar",
          "description": "Indicates if the progress bar is a single bar or multiple bars",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "description": "Variant of the progress bar (e.g., success, error, etc.)",
          "type": "string | undefined",
          "default": "\"primary\""
        },
        {
          "name": "max",
          "description": "Maximum value of the progress bar",
          "type": "number",
          "default": "100"
        },
        {
          "name": "multi",
          "description": "Indicates if the progress bar is multi-segmented",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "description": "Size of the progress bar (e.g., sm, md, lg)",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"lg\""
        },
        {
          "name": "value",
          "description": "Current value of the progress bar",
          "type": "number",
          "default": "0"
        },
        {
          "name": "animated",
          "description": "Indicates if the progress bar is animated",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "sideToSide",
          "description": "Turns on animation that slides progress bar from side to side",
          "type": "boolean | undefined"
        },
        {
          "name": "hideLabel",
          "description": "Visually hide progress label to be accessible",
          "type": "boolean | undefined"
        }
      ],
      "properties": [
        {
          "name": "ariaLabelledBy",
          "attribute": "ariaLabelledBy",
          "description": "aria-labelledby attribute",
          "type": "string | undefined"
        },
        {
          "name": "bar",
          "attribute": "bar",
          "description": "Indicates if the progress bar is a single bar or multiple bars",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Variant of the progress bar (e.g., success, error, etc.)",
          "type": "string | undefined",
          "default": "\"primary\""
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Maximum value of the progress bar",
          "type": "number",
          "default": "100"
        },
        {
          "name": "multi",
          "attribute": "multi",
          "description": "Indicates if the progress bar is multi-segmented",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Size of the progress bar (e.g., sm, md, lg)",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"lg\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Current value of the progress bar",
          "type": "number",
          "default": "0"
        },
        {
          "name": "animated",
          "attribute": "animated",
          "description": "Indicates if the progress bar is animated",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "sideToSide",
          "attribute": "sideToSide",
          "description": "Turns on animation that slides progress bar from side to side",
          "type": "boolean | undefined"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Visually hide progress label to be accessible",
          "type": "boolean | undefined"
        },
        {
          "name": "renderTooltip",
          "description": "Indicates if the tooltip should be rendered",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "progressWrapper",
          "description": "Progress wrapper element",
          "type": "HTMLDivElement"
        },
        {
          "name": "progressBarElement",
          "description": "Progress bar element",
          "type": "HTMLDivElement"
        },
        {
          "name": "progressBars",
          "type": "Progress[] | undefined"
        },
        {
          "name": "progressBarWidth",
          "description": "Progress bar width",
          "type": "number | undefined"
        },
        {
          "name": "styles",
          "type": "CSSResult",
          "default": "\"unsafeCSS(styles)\""
        },
        {
          "name": "checkWidth"
        }
      ]
    },
    {
      "name": "nef-radio",
      "path": "./src/components/Radio/index.ts",
      "attributes": [
        {
          "name": "checked",
          "description": "Checked attribute\n- Changes the component's treatment to represent a checked state",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled attribute\n- Changes the component's treatment to represent a disabled state",
          "type": "boolean | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined",
          "default": "true"
        },
        {
          "name": "hideLabel",
          "description": "Hide label?\n- If true, hides the label from displaying",
          "type": "boolean | undefined"
        },
        {
          "name": "label",
          "description": "Label text\n- The text to display as the label",
          "type": "string",
          "default": "\"Radio Label\""
        },
        {
          "name": "name",
          "description": "Name attribute",
          "type": "string",
          "default": "\"radio-name\""
        },
        {
          "name": "value",
          "description": "Value attribute",
          "type": "string",
          "default": "\"radio-value\""
        },
        {
          "name": "fieldId",
          "description": "Id attribute\n- The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the radio\n- **sm** renders the default size of the radio\n- **md** renders the small size of the radio",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "properties": [
        {
          "name": "checked",
          "attribute": "checked",
          "description": "Checked attribute\n- Changes the component's treatment to represent a checked state",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disabled attribute\n- Changes the component's treatment to represent a disabled state",
          "type": "boolean | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined",
          "default": "true"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Hide label?\n- If true, hides the label from displaying",
          "type": "boolean | undefined"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Label text\n- The text to display as the label",
          "type": "string",
          "default": "\"Radio Label\""
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Name attribute",
          "type": "string",
          "default": "\"radio-name\""
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Value attribute",
          "type": "string",
          "default": "\"radio-value\""
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "Id attribute\n- The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the radio\n- **sm** renders the default size of the radio\n- **md** renders the small size of the radio",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "events": [
        {
          "name": "nef-radio-change"
        },
        {
          "name": "nef-radio-focus"
        },
        {
          "name": "nef-radio-blur"
        }
      ]
    },
    {
      "name": "nef-radio-group",
      "path": "./src/components/RadioGroup/index.ts",
      "description": "Component: nef-radio-group\n- **slot** `label`: Slot for a label\n- **slot** `error-text`: Slot for error text that displays when the radio group is invalid\n- **slot** `help-text`: Slot for help text that displays before the radio group",
      "attributes": [
        {
          "name": "state",
          "description": "Specifies the state of the radio group\n- **valid** applies styles to indicate the radio group is valid\n- **invalid** applies styles to indicate the radio group is invalid\n- **indeterminate** applies styles to indicate the radio group is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "inline",
          "description": "Inline?\n- **true** aligns the radio items in a row\n- **false** aligns the radio items in a column",
          "type": "boolean | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the radio group\n- **sm** renders the default size of the radio items\n- **md** renders the small size of the radio items",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "properties": [
        {
          "name": "state",
          "attribute": "state",
          "description": "Specifies the state of the radio group\n- **valid** applies styles to indicate the radio group is valid\n- **invalid** applies styles to indicate the radio group is invalid\n- **indeterminate** applies styles to indicate the radio group is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "inline",
          "attribute": "inline",
          "description": "Inline?\n- **true** aligns the radio items in a row\n- **false** aligns the radio items in a column",
          "type": "boolean | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the radio group\n- **sm** renders the default size of the radio items\n- **md** renders the small size of the radio items",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ]
    },
    {
      "name": "nef-slider",
      "path": "./src/components/Slider/index.ts",
      "description": "Component: nef-c-slider\n- **slot** `default`: Slot for the slider content",
      "attributes": [
        {
          "name": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string",
          "default": "\"Slider\""
        },
        {
          "name": "min",
          "description": "Minimum value of the slider",
          "type": "number",
          "default": "0"
        },
        {
          "name": "max",
          "description": "Maximum value of the slider",
          "type": "number",
          "default": "100"
        },
        {
          "name": "step",
          "description": "Interval between legal numbers",
          "type": "number | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled state of the slider",
          "type": "boolean | undefined"
        },
        {
          "name": "value",
          "description": "Current value of the slider",
          "type": "number | undefined",
          "default": "0"
        },
        {
          "name": "startValue",
          "description": "Current value of the start slider if the variant is \"range\"",
          "type": "number | undefined",
          "default": "0"
        },
        {
          "name": "middleValue",
          "description": "Current value of the middle slider if the variant is \"range\"",
          "type": "number | undefined"
        },
        {
          "name": "endValue",
          "description": "Current value of the end slider if the variant is \"range\"",
          "type": "number | undefined",
          "default": "100"
        },
        {
          "name": "variant",
          "description": "Variant of the slider\n- **range**: A range slider",
          "type": "\"range\" | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the slider thumb\n- **sm** render the slider thumb to be 14px\n- **md** render the slider thumb to be 20px",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "properties": [
        {
          "name": "label",
          "attribute": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string",
          "default": "\"Slider\""
        },
        {
          "name": "min",
          "attribute": "min",
          "description": "Minimum value of the slider",
          "type": "number",
          "default": "0"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Maximum value of the slider",
          "type": "number",
          "default": "100"
        },
        {
          "name": "step",
          "attribute": "step",
          "description": "Interval between legal numbers",
          "type": "number | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Disabled state of the slider",
          "type": "boolean | undefined"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Current value of the slider",
          "type": "number | undefined",
          "default": "0"
        },
        {
          "name": "startValue",
          "attribute": "startValue",
          "description": "Current value of the start slider if the variant is \"range\"",
          "type": "number | undefined",
          "default": "0"
        },
        {
          "name": "middleValue",
          "attribute": "middleValue",
          "description": "Current value of the middle slider if the variant is \"range\"",
          "type": "number | undefined"
        },
        {
          "name": "endValue",
          "attribute": "endValue",
          "description": "Current value of the end slider if the variant is \"range\"",
          "type": "number | undefined",
          "default": "100"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Variant of the slider\n- **range**: A range slider",
          "type": "\"range\" | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the slider thumb\n- **sm** render the slider thumb to be 14px\n- **md** render the slider thumb to be 20px",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        }
      ],
      "events": [
        {
          "name": "nef-slider-change"
        }
      ]
    },
    {
      "name": "nef-switch",
      "path": "./src/components/Switch/index.ts",
      "attributes": [
        {
          "name": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "disabled",
          "description": "Indicates whether the switch is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "state",
          "description": "Specifies the state of the text input\n- **valid** applies styles to indicate the text input is valid\n- **invalid** applies styles to indicate the text input is invalid\n- **indeterminate** applies styles to indicate the text input is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "variant",
          "description": "The variant of the switch.\n- **success** - Success variant.\n- **warning** - Warning variant.\n- **error** - Error variant.",
          "type": "\"success\" | \"error\" | \"warning\"",
          "default": "\"success\""
        },
        {
          "name": "hideFieldLabel",
          "description": "Shows/visually hides the field label. Field label is required for accessibility, so it is visually hidden by default.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "hideLabel",
          "description": "Determines if the label should be shown.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "offText",
          "description": "Custom text for the \"off\" state.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "onText",
          "description": "Custom text for the \"on\" state.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "fieldLabel",
          "description": "Field label to describe the entire switch",
          "type": "string",
          "default": "\"Required Label\""
        },
        {
          "name": "checked",
          "description": "Indicates whether the switch is checked.",
          "type": "boolean | undefined"
        },
        {
          "name": "optional",
          "description": "Indicates whether the switch is optional.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Indicates whether the switch is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "state",
          "attribute": "state",
          "description": "Specifies the state of the text input\n- **valid** applies styles to indicate the text input is valid\n- **invalid** applies styles to indicate the text input is invalid\n- **indeterminate** applies styles to indicate the text input is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The variant of the switch.\n- **success** - Success variant.\n- **warning** - Warning variant.\n- **error** - Error variant.",
          "type": "\"success\" | \"error\" | \"warning\"",
          "default": "\"success\""
        },
        {
          "name": "hideFieldLabel",
          "attribute": "hideFieldLabel",
          "description": "Shows/visually hides the field label. Field label is required for accessibility, so it is visually hidden by default.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Determines if the label should be shown.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "offText",
          "attribute": "offText",
          "description": "Custom text for the \"off\" state.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "onText",
          "attribute": "onText",
          "description": "Custom text for the \"on\" state.",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "fieldLabel",
          "attribute": "fieldLabel",
          "description": "Field label to describe the entire switch",
          "type": "string",
          "default": "\"Required Label\""
        },
        {
          "name": "checked",
          "attribute": "checked",
          "description": "Indicates whether the switch is checked.",
          "type": "boolean | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Indicates whether the switch is optional.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "type",
          "type": "\"checkbox\"",
          "default": "\"checkbox\""
        },
        {
          "name": "field",
          "description": "The underlying HTML form field.\nThis should be implemented with `@query`\nin the implementing class.",
          "type": "HTMLInputElement"
        }
      ],
      "events": [
        {
          "name": "nef-switch-toggle"
        }
      ]
    },
    {
      "name": "nef-table",
      "path": "./src/components/Table/index.ts",
      "description": "Component: nef-table\n- **slot** `default`: Slot for rows in the table body\n- **slot** `header`: Slot for rows in the table header",
      "attributes": [
        {
          "name": "size",
          "description": "Sets the size of the table.\n- **sm** Small padding.\n- **md** Medium padding (default).\n- **sm** Small padding.",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "zebra",
          "description": "Enables zebra striping for table rows.\n- **true** Zebra striping is enabled.\n- **false** Zebra striping is disabled.",
          "type": "boolean | undefined"
        }
      ],
      "properties": [
        {
          "name": "size",
          "attribute": "size",
          "description": "Sets the size of the table.\n- **sm** Small padding.\n- **md** Medium padding (default).\n- **sm** Small padding.",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "zebra",
          "attribute": "zebra",
          "description": "Enables zebra striping for table rows.\n- **true** Zebra striping is enabled.\n- **false** Zebra striping is disabled.",
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "nef-table-cell",
      "path": "./src/components/TableCell/index.ts",
      "description": "Component: nef-table-cell\n- **slot** `default`: Slot for content in the table cell",
      "attributes": [
        {
          "name": "align",
          "description": "The alignment of the table cell content.\n- **left** Align content to the left (default).\n- **center** Align content to the center.\n- **right** Align content to the right.",
          "type": "Omit<TextAlignments, \"justify\"> | undefined",
          "default": "\"left\""
        },
        {
          "name": "width",
          "description": "The width of the table cell.",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "align",
          "attribute": "align",
          "description": "The alignment of the table cell content.\n- **left** Align content to the left (default).\n- **center** Align content to the center.\n- **right** Align content to the right.",
          "type": "Omit<TextAlignments, \"justify\"> | undefined",
          "default": "\"left\""
        },
        {
          "name": "width",
          "attribute": "width",
          "description": "The width of the table cell.",
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "nef-table-header",
      "path": "./src/components/TableHeader/index.ts",
      "description": "Component: nef-table-header\n- **slot** `default`: Slot for table rows in the table header",
      "attributes": [
        {
          "name": "align",
          "description": "The alignment of the table header content.\n- **left** Aligns content to the left (default).\n- **center** Aligns content to the center.\n- **right** Aligns content to the right.",
          "type": "Omit<TextAlignments, \"justify\"> | undefined",
          "default": "\"left\""
        },
        {
          "name": "width",
          "description": "The width of the table header.",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "align",
          "attribute": "align",
          "description": "The alignment of the table header content.\n- **left** Aligns content to the left (default).\n- **center** Aligns content to the center.\n- **right** Aligns content to the right.",
          "type": "Omit<TextAlignments, \"justify\"> | undefined",
          "default": "\"left\""
        },
        {
          "name": "width",
          "attribute": "width",
          "description": "The width of the table header.",
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "nef-table-row",
      "path": "./src/components/TableRow/index.ts",
      "description": "Component: nef-table-row\n- **slot** `default`: Slot for table cells in the table row"
    },
    {
      "name": "nef-tag",
      "path": "./src/components/Tag/index.ts",
      "attributes": [
        {
          "name": "outlined",
          "description": "Indicates if the tag is outlined",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Indicates if the tag is disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "description": "Sets the variant of the tag\n**default** - The default variant\n**primary** - The primary variant\n**secondary** - The secondary variant\n**success** - The success variant\n**danger** - The danger variant\n**warning** - The warning variant\n**dark** - The dark variant",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "dismissible",
          "description": "Indicates if the tag is dismissible",
          "type": "boolean",
          "default": "true"
        }
      ],
      "properties": [
        {
          "name": "outlined",
          "attribute": "outlined",
          "description": "Indicates if the tag is outlined",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Indicates if the tag is disabled",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Sets the variant of the tag\n**default** - The default variant\n**primary** - The primary variant\n**secondary** - The secondary variant\n**success** - The success variant\n**danger** - The danger variant\n**warning** - The warning variant\n**dark** - The dark variant",
          "type": "string",
          "default": "\"default\""
        },
        {
          "name": "dismissible",
          "attribute": "dismissible",
          "description": "Indicates if the tag is dismissible",
          "type": "boolean",
          "default": "true"
        }
      ],
      "events": [
        {
          "name": "dismiss"
        }
      ]
    },
    {
      "name": "nef-textarea",
      "path": "./src/components/TextArea/index.ts",
      "description": "Component: nef-textarea\n- **slot** `label`: Slot for a label\n- **slot** `error-text`: Slot for error text that displays when the textarea is invalid\n- **slot** `help-text`: Slot for help text that displays before the textarea",
      "attributes": [
        {
          "name": "state",
          "description": "Specifies the state of the text textarea\n- **valid** applies styles to indicate the text textarea is valid\n- **invalid** applies styles to indicate the text textarea is invalid\n- **indeterminate** applies styles to indicate the text textarea is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the textarea\n- **sm** render an `<textarea>` with the smaller padding\n- **md** render an `<textarea>` with the default padding",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "placeholder",
          "description": "Specifies a short hint that describes the expected value of an `<textarea>` element",
          "type": "string | undefined"
        },
        {
          "name": "name",
          "description": "Specifies the name of an `<textarea>` element",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "description": "Specifies the value of an `<textarea>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an textarea field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Specifies that an `<textarea>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "readOnly",
          "description": "Specifies that an textarea field is read-only",
          "type": "boolean | undefined"
        },
        {
          "name": "maxLength",
          "description": "Specifies the maximum number of characters allowed in an `<textarea>` element",
          "type": "number | undefined"
        },
        {
          "name": "rows",
          "description": "Specifies the visible number of lines in a `<textarea>` element",
          "type": "number | undefined"
        },
        {
          "name": "cols",
          "description": "Specifies the visible width of a `<textarea>` element",
          "type": "number | undefined"
        },
        {
          "name": "resize",
          "description": "Resize?\n- **default** resizes both horizontally and vertically\n- **none** disables resizing\n- **horizontal** resizes only horizontally\n- **vertical** resizes only vertically",
          "type": "Resize | undefined"
        },
        {
          "name": "autoResize",
          "description": "Automatically resize?\n- **true** automatically resizes to fit the content\n- **false** does not automatically resize",
          "type": "boolean | undefined"
        },
        {
          "name": "autoFocus",
          "description": "Specifies that a `<textarea>` element should automatically get focus when the page loads",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "description": "The ID used for A11y and to associate the label with the textarea",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        }
      ],
      "properties": [
        {
          "name": "state",
          "attribute": "state",
          "description": "Specifies the state of the text textarea\n- **valid** applies styles to indicate the text textarea is valid\n- **invalid** applies styles to indicate the text textarea is invalid\n- **indeterminate** applies styles to indicate the text textarea is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the textarea\n- **sm** render an `<textarea>` with the smaller padding\n- **md** render an `<textarea>` with the default padding",
          "type": "Omit<Sizes, \"xs\" | \"lg\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Specifies a short hint that describes the expected value of an `<textarea>` element",
          "type": "string | undefined"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Specifies the name of an `<textarea>` element",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Specifies the value of an `<textarea>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an textarea field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Specifies that an `<textarea>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "readOnly",
          "attribute": "readOnly",
          "description": "Specifies that an textarea field is read-only",
          "type": "boolean | undefined"
        },
        {
          "name": "maxLength",
          "attribute": "maxLength",
          "description": "Specifies the maximum number of characters allowed in an `<textarea>` element",
          "type": "number | undefined"
        },
        {
          "name": "rows",
          "attribute": "rows",
          "description": "Specifies the visible number of lines in a `<textarea>` element",
          "type": "number | undefined"
        },
        {
          "name": "cols",
          "attribute": "cols",
          "description": "Specifies the visible width of a `<textarea>` element",
          "type": "number | undefined"
        },
        {
          "name": "resize",
          "attribute": "resize",
          "description": "Resize?\n- **default** resizes both horizontally and vertically\n- **none** disables resizing\n- **horizontal** resizes only horizontally\n- **vertical** resizes only vertically",
          "type": "Resize | undefined"
        },
        {
          "name": "autoResize",
          "attribute": "autoResize",
          "description": "Automatically resize?\n- **true** automatically resizes to fit the content\n- **false** does not automatically resize",
          "type": "boolean | undefined"
        },
        {
          "name": "autoFocus",
          "attribute": "autoFocus",
          "description": "Specifies that a `<textarea>` element should automatically get focus when the page loads",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "The ID used for A11y and to associate the label with the textarea",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        }
      ],
      "events": [
        {
          "name": "nef-textarea-change"
        },
        {
          "name": "nef-textarea-click"
        },
        {
          "name": "nef-textarea-focus"
        },
        {
          "name": "nef-textarea-blur"
        }
      ]
    },
    {
      "name": "nef-text-input",
      "path": "./src/components/TextInput/index.ts",
      "description": "Component: nef-text-input\n- **slot** `label`: Slot for a label\n- **slot** `icon`: Slot for an icon that displays inside the input\n- **slot** `error-text`: Slot for error text that displays when the text input is invalid\n- **slot** `help-text`: Slot for help text that displays before the text input",
      "attributes": [
        {
          "name": "state",
          "description": "Specifies the state of the text input\n- **valid** applies styles to indicate the text input is valid\n- **invalid** applies styles to indicate the text input is invalid\n- **indeterminate** applies styles to indicate the text input is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "size",
          "description": "Specifies the size of the text input\n- **sm** render an `<input>` with the smaller padding\n- **md** render an `<input>` with the default padding\n- **lg** render an `<input>` with the larger padding",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "placeholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "name",
          "description": "Specifies the name of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "description": "Specifies the value of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "readOnly",
          "description": "Specifies that an input field is read-only",
          "type": "boolean | undefined"
        },
        {
          "name": "step",
          "description": "Specifies the interval between legal numbers in an input field",
          "type": "number | undefined"
        },
        {
          "name": "min",
          "description": "Specifies a minimum value for an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "max",
          "description": "Specifies a maximum value for an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "maxLength",
          "description": "Specifies the maximum number of characters allowed in an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "minLength",
          "description": "Specifies the minimum number of characters required in an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "autoComplete",
          "description": "Specifies whether an `<input>` element should have autocomplete enabled",
          "type": "boolean | undefined"
        },
        {
          "name": "autoFocus",
          "description": "Specifies that an `<input>` element should automatically get focus when the page loads",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "type",
          "description": "Specifies the type `<input>` element to display",
          "type": "FormType",
          "default": "\"text\""
        }
      ],
      "properties": [
        {
          "name": "state",
          "attribute": "state",
          "description": "Specifies the state of the text input\n- **valid** applies styles to indicate the text input is valid\n- **invalid** applies styles to indicate the text input is invalid\n- **indeterminate** applies styles to indicate the text input is indeterminate",
          "type": "FormState | undefined"
        },
        {
          "name": "size",
          "attribute": "size",
          "description": "Specifies the size of the text input\n- **sm** render an `<input>` with the smaller padding\n- **md** render an `<input>` with the default padding\n- **lg** render an `<input>` with the larger padding",
          "type": "Omit<Sizes, \"xs\" | \"xl\"> | undefined",
          "default": "\"md\""
        },
        {
          "name": "label",
          "attribute": "label",
          "description": "Screen reader users (will read out loud the label, when the user is focused on the element)",
          "type": "string | undefined"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "Specifies a short hint that describes the expected value of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "name",
          "attribute": "name",
          "description": "Specifies the name of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "value",
          "attribute": "value",
          "description": "Specifies the value of an `<input>` element",
          "type": "string | undefined"
        },
        {
          "name": "optional",
          "attribute": "optional",
          "description": "Specifies that an input field must be filled out before submitting the form",
          "type": "boolean | undefined"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Specifies that an `<input>` element should be disabled",
          "type": "boolean | undefined"
        },
        {
          "name": "readOnly",
          "attribute": "readOnly",
          "description": "Specifies that an input field is read-only",
          "type": "boolean | undefined"
        },
        {
          "name": "step",
          "attribute": "step",
          "description": "Specifies the interval between legal numbers in an input field",
          "type": "number | undefined"
        },
        {
          "name": "min",
          "attribute": "min",
          "description": "Specifies a minimum value for an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "max",
          "attribute": "max",
          "description": "Specifies a maximum value for an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "maxLength",
          "attribute": "maxLength",
          "description": "Specifies the maximum number of characters allowed in an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "minLength",
          "attribute": "minLength",
          "description": "Specifies the minimum number of characters required in an `<input>` element",
          "type": "number | undefined"
        },
        {
          "name": "autoComplete",
          "attribute": "autoComplete",
          "description": "Specifies whether an `<input>` element should have autocomplete enabled",
          "type": "boolean | undefined"
        },
        {
          "name": "autoFocus",
          "attribute": "autoFocus",
          "description": "Specifies that an `<input>` element should automatically get focus when the page loads",
          "type": "boolean | undefined"
        },
        {
          "name": "fieldId",
          "attribute": "fieldId",
          "description": "The ID used for A11y and to associate the label with the input",
          "type": "string | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "`aria-describedby` attribute applied to the field note or error note for A11y",
          "type": "string | undefined"
        },
        {
          "name": "hideLabel",
          "attribute": "hideLabel",
          "description": "Hide label?\n- **true** visually hides the label\n- **false** shows the label",
          "type": "boolean | undefined"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Specifies the type `<input>` element to display",
          "type": "FormType",
          "default": "\"text\""
        }
      ],
      "events": [
        {
          "name": "nef-text-input-change"
        },
        {
          "name": "nef-text-input-click"
        },
        {
          "name": "nef-text-input-focus"
        },
        {
          "name": "nef-text-input-blur"
        }
      ]
    },
    {
      "name": "nef-toast",
      "path": "./src/components/Toast/index.ts",
      "description": "Component: nef-toast\n\n- **slot**: `default`: Slot for the main content of the toast.\n- **slot**: `heading`: Slot for the heading or title of the toast.\n- **slot**: `subdescription`: Slot for additional descriptive content.\n- **slot**: `link`: Slot for links or additional actions.",
      "attributes": [
        {
          "name": "heading",
          "description": "The heading or title of the toast.",
          "type": "string | undefined"
        },
        {
          "name": "isActive",
          "description": "Whether the toast is active.",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "variant",
          "description": "The variant of the toast.\n- **info** - Info variant.\n- **success** - Success variant.\n- **error** - Error variant.\n- **warning** - Warning variant.",
          "type": "string | undefined",
          "default": "\"info\""
        },
        {
          "name": "autoClose",
          "description": "Whether the toast should auto close.",
          "type": "boolean | undefined"
        },
        {
          "name": "autoCloseTime",
          "description": "The auto close duration in milliseconds.\n- **5000** The toast will auto close after 5 seconds (default).",
          "type": "number",
          "default": "5000"
        },
        {
          "name": "closeButtonText",
          "description": "Close button text for language/customization support.",
          "type": "string",
          "default": "\"Close\""
        }
      ],
      "properties": [
        {
          "name": "heading",
          "attribute": "heading",
          "description": "The heading or title of the toast.",
          "type": "string | undefined"
        },
        {
          "name": "isActive",
          "attribute": "isActive",
          "description": "Whether the toast is active.",
          "type": "boolean | undefined",
          "default": "false"
        },
        {
          "name": "variant",
          "attribute": "variant",
          "description": "The variant of the toast.\n- **info** - Info variant.\n- **success** - Success variant.\n- **error** - Error variant.\n- **warning** - Warning variant.",
          "type": "string | undefined",
          "default": "\"info\""
        },
        {
          "name": "autoClose",
          "attribute": "autoClose",
          "description": "Whether the toast should auto close.",
          "type": "boolean | undefined"
        },
        {
          "name": "autoCloseTime",
          "attribute": "autoCloseTime",
          "description": "The auto close duration in milliseconds.\n- **5000** The toast will auto close after 5 seconds (default).",
          "type": "number",
          "default": "5000"
        },
        {
          "name": "closeButtonText",
          "attribute": "closeButtonText",
          "description": "Close button text for language/customization support.",
          "type": "string",
          "default": "\"Close\""
        }
      ],
      "events": [
        {
          "name": "nef-toast-close"
        },
        {
          "name": "nef-toast-open"
        }
      ]
    },
    {
      "name": "nef-toast-group",
      "path": "./src/components/ToastGroup/index.ts",
      "description": "Component: nef-toast-group\n\n- **slot**: `default`: Slot for the toasts.",
      "attributes": [
        {
          "name": "placement",
          "description": "The placement of the toast group.\n- **top** places the toast group to the top center\n- **top-start** places the toast group to the top start\n- **top-end** places the toast group to the top end\n- **bottom** places the toast group to the bottom enter\n- **bottom-start** places the toast group to the bottom start\n- **bottom-end** places the toast group to the bottom end",
          "type": "Omit<Placement, \"left\" | \"right\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\"> | undefined",
          "default": "\"top\""
        }
      ],
      "properties": [
        {
          "name": "placement",
          "attribute": "placement",
          "description": "The placement of the toast group.\n- **top** places the toast group to the top center\n- **top-start** places the toast group to the top start\n- **top-end** places the toast group to the top end\n- **bottom** places the toast group to the bottom enter\n- **bottom-start** places the toast group to the bottom start\n- **bottom-end** places the toast group to the bottom end",
          "type": "Omit<Placement, \"left\" | \"right\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\"> | undefined",
          "default": "\"top\""
        }
      ]
    },
    {
      "name": "nef-tooltip",
      "path": "./src/components/Tooltip/index.ts",
      "description": "Component: nef-tooltip\n- **slot**: `default`: The tooltip container content\n- **slot**: `trigger`: The element that triggers the tooltip",
      "attributes": [
        {
          "name": "isActive",
          "description": "Is active?\n- **true** Shows the tooltip container\n- **false** Hides the tooltip container",
          "type": "boolean | undefined"
        },
        {
          "name": "placement",
          "description": "Placements the tooltip container absolutely to the trigger.\n- **top** places the tooltip to the top\n- **top-start** places the tooltip to the top start\n- **top-end** places the tooltip to the top end\n- **right** places the tooltip to the right\n- **right-start** places the tooltip to the right start\n- **right-end** places the tooltip to the right end\n- **bottom** places the tooltip to the bottom\n- **bottom-start** places the tooltip to the bottom start\n- **bottom-end** places the tooltip to the bottom end\n- **left** places the tooltip to the left\n- **left-start** places the tooltip to the left start\n- **left-end** places the tooltip to the left end",
          "type": "Placement | undefined",
          "default": "\"top\""
        },
        {
          "name": "offset",
          "description": "Offset\n- Shifts the tooltip container from the trigger.",
          "type": "number | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "description": "Aria Described By attribute\n- Dynamically set for A11y",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "isActive",
          "attribute": "isActive",
          "description": "Is active?\n- **true** Shows the tooltip container\n- **false** Hides the tooltip container",
          "type": "boolean | undefined"
        },
        {
          "name": "placement",
          "attribute": "placement",
          "description": "Placements the tooltip container absolutely to the trigger.\n- **top** places the tooltip to the top\n- **top-start** places the tooltip to the top start\n- **top-end** places the tooltip to the top end\n- **right** places the tooltip to the right\n- **right-start** places the tooltip to the right start\n- **right-end** places the tooltip to the right end\n- **bottom** places the tooltip to the bottom\n- **bottom-start** places the tooltip to the bottom start\n- **bottom-end** places the tooltip to the bottom end\n- **left** places the tooltip to the left\n- **left-start** places the tooltip to the left start\n- **left-end** places the tooltip to the left end",
          "type": "Placement | undefined",
          "default": "\"top\""
        },
        {
          "name": "offset",
          "attribute": "offset",
          "description": "Offset\n- Shifts the tooltip container from the trigger.",
          "type": "number | undefined"
        },
        {
          "name": "ariaDescribedBy",
          "attribute": "ariaDescribedBy",
          "description": "Aria Described By attribute\n- Dynamically set for A11y",
          "type": "string | undefined"
        }
      ],
      "events": [
        {
          "name": "nef-tooltip-show"
        },
        {
          "name": "nef-tooltip-hide"
        }
      ]
    },
    {
      "name": "nef-tree",
      "path": "./src/components/Tree/index.ts",
      "description": "The `nef-tree` component is a container for hierarchical tree items.\n\nSlots:\n- Default slot: Used for inserting `nef-tree-item` elements.",
      "attributes": [
        {
          "name": "expanded",
          "description": "Indicates whether the tree is expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "description": "Indicates whether the tree is disabled.",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "expanded",
          "attribute": "expanded",
          "description": "Indicates whether the tree is expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Indicates whether the tree is disabled.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "treeItems",
          "description": "Query assigned elements with the selector 'nef-tree-item'.",
          "type": "(HTMLElement & { expanded: boolean; depth: number; })[]"
        },
        {
          "name": "depth",
          "description": "Sets the depth of the tree.",
          "type": "number"
        }
      ]
    },
    {
      "name": "nef-tree-item",
      "path": "./src/components/TreeItem/index.ts",
      "description": "Slots:\n- title: Slot for the tree item title.\n- default: Slot for the tree item content.",
      "attributes": [
        {
          "name": "href",
          "description": "The URL that the tree item links to, if any.",
          "type": "string | undefined"
        },
        {
          "name": "isActive",
          "description": "Indicates if the tree item is currently active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isExpandable",
          "description": "Indicates if the tree item is expandable.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "expanded",
          "description": "Indicates if the tree item is currently expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "depth",
          "description": "The depth of the tree item in the tree structure.",
          "type": "number",
          "default": "0"
        }
      ],
      "properties": [
        {
          "name": "href",
          "attribute": "href",
          "description": "The URL that the tree item links to, if any.",
          "type": "string | undefined"
        },
        {
          "name": "isActive",
          "attribute": "isActive",
          "description": "Indicates if the tree item is currently active.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "isExpandable",
          "attribute": "isExpandable",
          "description": "Indicates if the tree item is expandable.",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "expanded",
          "attribute": "expanded",
          "description": "Indicates if the tree item is currently expanded.",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "depth",
          "attribute": "depth",
          "description": "The depth of the tree item in the tree structure.",
          "type": "number",
          "default": "0"
        },
        {
          "name": "nestedTrees",
          "description": "Query for all nested tree elements.",
          "type": "NodeListOf<HTMLElement & { expanded: boolean; }>"
        }
      ],
      "events": [
        {
          "name": "nef-tree-item-click"
        }
      ]
    },
    {
      "name": "nef-typography",
      "path": "./src/components/Typography/index.ts",
      "attributes": [
        {
          "name": "variant",
          "description": "Text style variant",
          "type": "string | undefined",
          "default": "\"body-default\""
        },
        {
          "name": "tag",
          "description": "Text style variant",
          "type": "string | undefined",
          "default": "\"span\""
        },
        {
          "name": "text",
          "description": "Text style variant",
          "type": "string | undefined"
        }
      ],
      "properties": [
        {
          "name": "variant",
          "attribute": "variant",
          "description": "Text style variant",
          "type": "string | undefined",
          "default": "\"body-default\""
        },
        {
          "name": "tag",
          "attribute": "tag",
          "description": "Text style variant",
          "type": "string | undefined",
          "default": "\"span\""
        },
        {
          "name": "text",
          "attribute": "text",
          "description": "Text style variant",
          "type": "string | undefined"
        }
      ]
    }
  ]
}